/*
 ============================================================================
 Name        : TP_[1].c
 Author      : Candela Bogado
 División    : 1 "E"
 Copyright   : © Candela Bogado - 2022
 Description : Trabajo Práctico 1 - Laboratorio 1
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
#include "CustomFunctions.h"


/**
* \brief Main function
* \param void - none
* \return Int - 0 : success
*
*/
int main(void) {
	setbuf(stdout, NULL);

	printf("¡Bienvenido al sistema de cálculo de precios!\nPresione \"Enter\" para continuar...");
	getchar();

	int userOption;
	int exitValueGetOption;
	float kilometers;
	int exitValueGetKilometers;
	float aerolineasFee;
	float latamFee;
	int userOptionSubMenu;
	int exitValueGetOptionSubMenu;
	int exitValueGetFee;

	float aerolineasWithDiscount;
	float aerolineasWithInterest;
	float aerolineasToBitcoin;
	float aerolineasUnitPrice;

	float latamWithDiscount;
	float latamWithInterest;
	float latamToBitcoin;
	float latamUnitPrice;

	float priceDifference;

	kilometers = 0;
	aerolineasFee = 0;
	latamFee = 0;

	do {
		printMenu(kilometers, aerolineasFee, latamFee);

		exitValueGetOption = getOption(&userOption, 1, 6, 3);

		if (exitValueGetOption == 0) {
			switch(userOption) {
				case 1:
					exitValueGetKilometers = getKilometers(&kilometers, 1, 30000, 3);
					if (exitValueGetKilometers < 0) {
						printf("El valor ingresado para kilómetros no es válido y se quedó sin intentos.\n"
								"Revise los valores y vuelva a intentarlo en unos minutos.\n");
					}
					break;
				case 2:
					do {
						printSubMenu(aerolineasFee, latamFee);
						exitValueGetOptionSubMenu = getOption(&userOptionSubMenu, 1, 3, 3);
						if (exitValueGetOptionSubMenu == 0) {
							switch(userOptionSubMenu) {
								case 1:
									exitValueGetFee = getFee(&aerolineasFee, 1, 5000000, 3);
									break;
								case 2:
									exitValueGetFee = getFee(&latamFee, 1, 5000000, 3);
									break;
							}
							if (exitValueGetFee < 0) {
								printf("El valor ingresado para el vuelo no es válido y se quedó sin intentos.\n"
										"Revise los valores y vuelva a intentarlo en unos minutos.\n");
							}
						}
						//SI SE QUEDA SIN INTENTOS
						if (exitValueGetOptionSubMenu < 0) {
							printf("La opción ingresada no es válida y se quedó sin intentos.\nVuelva a intentarlo en unos minutos.\n");
						}
						//SALE SI SE QUEDA SIN INTENTOS O SI PRESIONA 3
					} while (userOptionSubMenu != 3 && exitValueGetOptionSubMenu == 0);
					break;
				case 3:
					if (kilometers > 0 && aerolineasFee > 0 && latamFee > 0) {
						calculateCosts(kilometers, aerolineasFee, &aerolineasWithDiscount, &aerolineasWithInterest, &aerolineasToBitcoin, &aerolineasUnitPrice);
						calculateCosts(kilometers, latamFee, &latamWithDiscount, &latamWithInterest, &latamToBitcoin, &latamUnitPrice);
						calculatePriceDifference(&priceDifference, aerolineasFee, latamFee);
						printf("Valores calculados.\n");
					} else {
						if (kilometers <= 0) {
							printf("Aún no ingresó kilómetros.\nPor favor, ingrese kilómetros para hacer los cálculos\n");
						}
						if (aerolineasFee <= 0) {
							printf("Aún no ingresó el precio del vuelo de Aerolíneas Argentinas.\n "
										"Por favor, ingrese el valor para hacer los cálculos\n");
						}
						if (latamFee <= 0) {
							printf("Aún no ingresó el precio del vuelo de LATAM Airlines.\n "
										"Por favor, ingrese el valor para hacer los cálculos\n");
						}
					}
					break;
				case 4:
					if (aerolineasWithDiscount > 0 && aerolineasWithInterest > 0 && aerolineasToBitcoin > 0
							&& aerolineasUnitPrice > 0 && latamWithDiscount > 0 && latamWithInterest > 0
							&& latamToBitcoin > 0 && latamUnitPrice > 0) {
						printf("Kilómetros ingresados: %.2f\n", kilometers);
						printf("Precio Aerolíneas Argentinas: %.2f\n", aerolineasFee);
						printResultsPerAirline(aerolineasWithDiscount, aerolineasWithInterest, aerolineasToBitcoin, aerolineasUnitPrice);
						printf("Precio LATAM Airlines: %.2f\n", latamFee);
						printResultsPerAirline(latamWithDiscount, latamWithInterest, latamToBitcoin, latamUnitPrice);
						printResultsDifference(priceDifference);
					} else {
						printf("Los costos de los vuelos aún no fueron calculados.\n"
										"Por favor, realice los cálculos para mostrar los resultados.\n");
					}
					break;
				case 5:
					//Carga Forzada
					break;
				case 6:
					printf("¡Muchas gracias por su visita! Usted salió del programa.\nPara ingresar más datos, vuelva a iniciar.");
					break;
			}
		}
		//SALE SI SE QUEDA SIN INTENTOS O SI PRESIONA 6
	} while (userOption != 6 && exitValueGetOption == 0);

	if (exitValueGetOption < 0) {
		printf("La opción ingresada no es válida y se quedó sin intentos.\nVuelva a intentarlo en unos minutos.");
	}
	return 0;
}
